#!/usr/bin/env perl
use strict;
use warnings;

use utf8;
binmode(STDOUT, ":utf8");
use Encode;

use Data::Dumper;
use List::Util qw(sum);
use RVP::Calculate;

$| = 1;

my $calc = RVP::Calculate->new();

print STDERR "Loading route data...";
my @routes = (
	RVP::Schedule::from_file("fahrplandaten/903-mo_fr-ri.huettenheim.csv"),
	RVP::Schedule::from_file("fahrplandaten/sb40-mo_fr-ri.duisburg.csv"),
);
print STDERR " done.\nBuilding graph from route data...";
$calc->add_route_data(@routes);
print STDERR " done.\n";

print STDERR "Adding wait nodes...";
my %stops; foreach (map { keys(%{$_->{stations}}) } @routes) { $stops{$_} = 1; }
for my $stop (keys(%stops)) {
	$calc->add_wait_nodes($stop, 15*60+30, 16*60+30);
}
print STDERR " done.\n";
print STDERR "Graph has " . $calc->{graph}->countvertices() . " vertices and " . $calc->{graph}->countedges() . " edges now.\n";

sub path_length {
	my ($graph, $path) = @_;
	return sum map { $_->[2] } @{$path};
}

my @connections = $calc->calculate(decode_utf8($ARGV[0]), decode_utf8($ARGV[1]), 1);
foreach my $connection (@connections) {
	my @events = RVP::Calculate::connection_as_events(@{$connection});
	foreach my $event (@events) {
		if ($event->{event} eq "depart") {
			print "\n";
			printf("%5s %2s  %-30s  %s\n",
				$event->{time}, "ab", $event->{station},
				$event->{line},
			);
		} elsif ($event->{event} eq "arrive") {
			printf("%5s %2s  %-30s\n",
				$event->{time}, "an", $event->{station},
			);
		}
	}
	print "\n" . "-" x 6 . "\n";
}

